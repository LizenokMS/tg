from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

bot = Bot(token="secret")
dp = Dispatcher(bot)

with open ("zadaniya.txt", "r", encoding="utf-8") as file:
    students = [line.rstrip("\n")  for line in file]
    students = list(filter(None, students))
print(students)

@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    buttons = [
        [types.KeyboardButton(text="Help")],
        [types.KeyboardButton(text="–ß—Ç–æ-—Ç–æ")]
               ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=buttons,
                                         resize_keyboard=True)

    await message.answer(text="üèÜ–ü—Ä–∏–≤–µ—Ç, <em>—è –±–æ—Ç</em>",
                         parse_mode="HTML",
                         reply_markup=keyboard)

HELP_COMMAND = """–≠—Ç–æ—Ç –±–æ—Ç –¥–∞—Å—Ç –∑–∞–¥–∞–Ω–∏–µ –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É –Ω–∞ –∑–∞—á–µ—Çü´°
–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥üí•
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—Éüí•
"""

@dp.message_handler(lambda message: message.text == "Help")
async def help1_command(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML")
    await message.delete()
    
@dp.message_handler(commands=["help"])
async def help2_command(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
